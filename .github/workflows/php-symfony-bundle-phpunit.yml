name: Run PHPUnit tests and Psalm

on:
    workflow_call:
        inputs:
            php-version:
                required: false
                type: string
                default: "8.4"
            symfony-version:
                required: false
                type: string
                default: "6.4.*"

jobs:
    phpunit:
        name: "PHPUnit"
        runs-on: ubuntu-latest
        env:
            fail-fast: false
            SYMFONY_REQUIRE: ${{matrix.symfony-require}}
            SYMFONY_DEPRECATIONS_HELPER: ${{matrix.symfony-deprecations-helper}}
        strategy:
            matrix:
                include:
                    -   php-version: ${{ inputs.php-version }}
                        symfony-require: ${{ inputs.symfony-version }}
                        deps: "lowest"
                        symfony-deprecations-helper: "disabled=1"
                    -   php-version: ${{ inputs.php-version }}
                        symfony-require: ${{ inputs.symfony-version }}
                        deps: "highest"
                        symfony-deprecations-helper: "max[direct]=0"

        steps:
            -   name: "Checkout"
                uses: actions/checkout@v3
            -   name: "Install PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    php-version: "${{ matrix.php-version }}"
                    coverage: "pcov"
                    ini-values: "zend.assertions=1"
            -   name: "Allow symfony/flex globally"
                run: "composer global config --no-plugins allow-plugins.symfony/flex true"
            -   name: "Globally install symfony/flex"
                run: |
                    composer global config --no-plugins allow-plugins.symfony/flex true
                    composer global require --no-progress --no-scripts --no-plugins symfony/flex
            -   name: "Validate composer"
                run: "composer validate"
            -   name: "Install dependencies with Composer"
                uses: ramsey/composer-install@v2
                with:
                    dependency-versions: "${{ matrix.deps }}"
            -   name: "Run PHPUnit"
                run: "vendor/bin/phpunit --coverage-clover=coverage.clover.xml --log-junit log.junit.xml"
                continue-on-error: "${{ matrix.deps == 'lowest' }}"
            -   name: "Upload coverage"
                uses: actions/upload-artifact@v4
                if: matrix.deps == 'highest'
                with:
                    name: "coverage"
                    path: |
                        coverage.clover.xml
                        log.junit.xml
